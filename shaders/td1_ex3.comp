//? #version 430

//? uniform int NumberOfComputationsX;
//? uniform int NumberOfComputationsY;
//? uniform int NumberOfComputationsZ;

struct rgba {
    int r;
    int g;
    int b;
    int a;
};

layout(std430, binding=0) buffer myBuffer {
   rgba data[];
};

void cool_main() {
    uint gid = gl_GlobalInvocationID.x;
    rgba col = data[gid];
    data[gid].r = min(255, int(col.r * 0.393 + col.g * 0.769 + col.b * 0.189));
    data[gid].g = min(255, int(col.r * 0.349 + col.g * 0.686 + col.b * 0.168));
    data[gid].b = min(255, int(col.r * 0.272 + col.g * 0.534 + col.b * 0.131));
}